# Makefile.in generated by automake 1.8.3 from Makefile.am.
# source/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Makefile for MyServer (./source)

SOURCES = $(myserver_SOURCES)

srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/myserver
pkglibdir = $(libdir)/myserver
pkgincludedir = $(includedir)/myserver
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = i686-pc-linux-gnu
bin_PROGRAMS = myserver$(EXEEXT)
subdir = source
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gnome-pthread-check.m4 \
	$(top_srcdir)/m4/libpng.m4 $(top_srcdir)/m4/libxml.m4 \
	$(top_srcdir)/m4/wxwin.m4 $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(mkdir_p)
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_myserver_OBJECTS = myserver-protocol.$(OBJEXT) \
	myserver-AMMimeUtils.$(OBJEXT) myserver-http_headers.$(OBJEXT) \
	myserver-gzip.$(OBJEXT) myserver-MIME_manager.$(OBJEXT) \
	myserver-winCGI.$(OBJEXT) myserver-cXMLParser.$(OBJEXT) \
	myserver-cgi.$(OBJEXT) myserver-clientsThread.$(OBJEXT) \
	myserver-cserver.$(OBJEXT) myserver-filemanager.$(OBJEXT) \
	myserver-http.$(OBJEXT) myserver-httpmsg.$(OBJEXT) \
	myserver-isapi.$(OBJEXT) myserver-lfind.$(OBJEXT) \
	myserver-mscgi.$(OBJEXT) myserver-myserver.$(OBJEXT) \
	myserver-security.$(OBJEXT) myserver-sockets.$(OBJEXT) \
	myserver-stringutils.$(OBJEXT) myserver-utility.$(OBJEXT) \
	myserver-vhosts.$(OBJEXT) myserver-fastCGI.$(OBJEXT) \
	myserver-md5.$(OBJEXT)
myserver_OBJECTS = $(am_myserver_OBJECTS)
am__DEPENDENCIES_1 =
myserver_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/myserver-AMMimeUtils.Po \
	./$(DEPDIR)/myserver-MIME_manager.Po \
	./$(DEPDIR)/myserver-cXMLParser.Po \
	./$(DEPDIR)/myserver-cgi.Po \
	./$(DEPDIR)/myserver-clientsThread.Po \
	./$(DEPDIR)/myserver-cserver.Po \
	./$(DEPDIR)/myserver-fastCGI.Po \
	./$(DEPDIR)/myserver-filemanager.Po \
	./$(DEPDIR)/myserver-gzip.Po \
	./$(DEPDIR)/myserver-http.Po \
	./$(DEPDIR)/myserver-http_headers.Po \
	./$(DEPDIR)/myserver-httpmsg.Po \
	./$(DEPDIR)/myserver-isapi.Po \
	./$(DEPDIR)/myserver-lfind.Po \
	./$(DEPDIR)/myserver-md5.Po \
	./$(DEPDIR)/myserver-mscgi.Po \
	./$(DEPDIR)/myserver-myserver.Po \
	./$(DEPDIR)/myserver-protocol.Po \
	./$(DEPDIR)/myserver-security.Po \
	./$(DEPDIR)/myserver-sockets.Po \
	./$(DEPDIR)/myserver-stringutils.Po \
	./$(DEPDIR)/myserver-utility.Po \
	./$(DEPDIR)/myserver-vhosts.Po \
	./$(DEPDIR)/myserver-winCGI.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(myserver_SOURCES)
DIST_SOURCES = $(myserver_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /mnt/f/myserver/myserverweb/missing --run aclocal-1.8
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /mnt/f/myserver/myserverweb/missing --run tar
AUTOCONF = ${SHELL} /mnt/f/myserver/myserverweb/missing --run autoconf
AUTOHEADER = ${SHELL} /mnt/f/myserver/myserverweb/missing --run autoheader
AUTOMAKE = ${SHELL} /mnt/f/myserver/myserverweb/missing --run automake-1.8
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DL_LIB = -ldl
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBPNG_CFLAGS = 
LIBPNG_CONFIG = no
LIBPNG_LIBS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /mnt/f/myserver/myserverweb/missing --run makeinfo
OBJEXT = o
OPENSSL_LIB = -lssl
PACKAGE = myserver
PACKAGE_BUGREPORT = 
PACKAGE_NAME = MyServer
PACKAGE_STRING = MyServer 0.6.1
PACKAGE_TARNAME = myserver
PACKAGE_VERSION = 0.6.1
PATH_SEPARATOR = :
PTHREAD_LIB = -lpthread
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 0.6.1
WX_CFLAGS = -I/usr/local/lib/wx/include/gtk-2.5 -I/usr/local/include -DGTK_NO_CHECK_CASTS -D__WXGTK__ -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES
WX_CFLAGS_ONLY = 
WX_CONFIG_PATH = /usr/local/bin/wx-config
WX_CPPFLAGS = -I/usr/local/lib/wx/include/gtk-2.5 -I/usr/local/include -DGTK_NO_CHECK_CASTS -D__WXGTK__ -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES
WX_CXXFLAGS = -I/usr/local/lib/wx/include/gtk-2.5 -I/usr/local/include -DGTK_NO_CHECK_CASTS -D__WXGTK__ -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES
WX_CXXFLAGS_ONLY = 
WX_LIBS = -L/usr/local/lib -pthread -L/usr/X11R6/lib -lwx_gtk_html-2.5 -lwx_gtk_adv-2.5 -lwx_gtk_core-2.5 -lwx_base_xml-2.5 -lwx_base_net-2.5 -lwx_base-2.5
WX_LIBS_STATIC = -L/usr/local/lib -pthread -L/usr/X11R6/lib /usr/local/lib/libwx_gtk_html-2.5.a /usr/local/lib/libwx_gtk_adv-2.5.a /usr/local/lib/libwx_gtk_core-2.5.a /usr/local/lib/libwx_base_xml-2.5.a /usr/local/lib/libwx_base_net-2.5.a /usr/local/lib/libwx_base-2.5.a -L/usr/lib -L/usr/X11R6/lib -lgtk -lgdk -rdynamic -lgmodule -lgthread -lglib -lpthread -ldl -lXi -lXext -lX11 -lm -lXinerama -lXxf86vm -lpng -lz -ljpeg -ltiff -lexpat -lz -ldl -lm
WX_VERSION = 2.5.1
XML2_CONFIG = /usr/local/bin/xml2-config
XML_CFLAGS = -I/usr/local/include/libxml2
XML_LIBS = -L/usr/local/lib -lxml2 -lz -lpthread -lm
ZLIB_LIB = -lz
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /mnt/f/myserver/myserverweb/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p -- .
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
myserver_SOURCES = protocol.cpp AMMimeUtils.cpp http_headers.cpp gzip.cpp MIME_manager.cpp winCGI.cpp cXMLParser.cpp cgi.cpp clientsThread.cpp cserver.cpp filemanager.cpp http.cpp httpmsg.cpp isapi.cpp lfind.cpp mscgi.cpp myserver.cpp security.cpp sockets.cpp stringutils.cpp utility.cpp vhosts.cpp fastCGI.cpp md5.cpp
INCLUDES = $(all_includes)
myserver_LDFLAGS = $(all_libraries)
myserver_CXXFLAGS = $(CXXFLAGS) $(XML_CFLAGS)
myserver_LDADD = $(PTHREAD_LIB) $(DL_LIB) $(OPENSSL_LIB) $(ZLIB_LIB) $(XML_LIBS)
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  source/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  source/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
myserver$(EXEEXT): $(myserver_OBJECTS) $(myserver_DEPENDENCIES) 
	@rm -f myserver$(EXEEXT)
	$(CXXLINK) $(myserver_LDFLAGS) $(myserver_OBJECTS) $(myserver_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/myserver-AMMimeUtils.Po
include ./$(DEPDIR)/myserver-MIME_manager.Po
include ./$(DEPDIR)/myserver-cXMLParser.Po
include ./$(DEPDIR)/myserver-cgi.Po
include ./$(DEPDIR)/myserver-clientsThread.Po
include ./$(DEPDIR)/myserver-cserver.Po
include ./$(DEPDIR)/myserver-fastCGI.Po
include ./$(DEPDIR)/myserver-filemanager.Po
include ./$(DEPDIR)/myserver-gzip.Po
include ./$(DEPDIR)/myserver-http.Po
include ./$(DEPDIR)/myserver-http_headers.Po
include ./$(DEPDIR)/myserver-httpmsg.Po
include ./$(DEPDIR)/myserver-isapi.Po
include ./$(DEPDIR)/myserver-lfind.Po
include ./$(DEPDIR)/myserver-md5.Po
include ./$(DEPDIR)/myserver-mscgi.Po
include ./$(DEPDIR)/myserver-myserver.Po
include ./$(DEPDIR)/myserver-protocol.Po
include ./$(DEPDIR)/myserver-security.Po
include ./$(DEPDIR)/myserver-sockets.Po
include ./$(DEPDIR)/myserver-stringutils.Po
include ./$(DEPDIR)/myserver-utility.Po
include ./$(DEPDIR)/myserver-vhosts.Po
include ./$(DEPDIR)/myserver-winCGI.Po

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

myserver-protocol.o: protocol.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-protocol.o -MD -MP -MF "$(DEPDIR)/myserver-protocol.Tpo" -c -o myserver-protocol.o `test -f 'protocol.cpp' || echo '$(srcdir)/'`protocol.cpp; \
	then mv -f "$(DEPDIR)/myserver-protocol.Tpo" "$(DEPDIR)/myserver-protocol.Po"; else rm -f "$(DEPDIR)/myserver-protocol.Tpo"; exit 1; fi
#	source='protocol.cpp' object='myserver-protocol.o' libtool=no \
#	depfile='$(DEPDIR)/myserver-protocol.Po' tmpdepfile='$(DEPDIR)/myserver-protocol.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-protocol.o `test -f 'protocol.cpp' || echo '$(srcdir)/'`protocol.cpp

myserver-protocol.obj: protocol.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-protocol.obj -MD -MP -MF "$(DEPDIR)/myserver-protocol.Tpo" -c -o myserver-protocol.obj `if test -f 'protocol.cpp'; then $(CYGPATH_W) 'protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol.cpp'; fi`; \
	then mv -f "$(DEPDIR)/myserver-protocol.Tpo" "$(DEPDIR)/myserver-protocol.Po"; else rm -f "$(DEPDIR)/myserver-protocol.Tpo"; exit 1; fi
#	source='protocol.cpp' object='myserver-protocol.obj' libtool=no \
#	depfile='$(DEPDIR)/myserver-protocol.Po' tmpdepfile='$(DEPDIR)/myserver-protocol.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-protocol.obj `if test -f 'protocol.cpp'; then $(CYGPATH_W) 'protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol.cpp'; fi`

myserver-AMMimeUtils.o: AMMimeUtils.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-AMMimeUtils.o -MD -MP -MF "$(DEPDIR)/myserver-AMMimeUtils.Tpo" -c -o myserver-AMMimeUtils.o `test -f 'AMMimeUtils.cpp' || echo '$(srcdir)/'`AMMimeUtils.cpp; \
	then mv -f "$(DEPDIR)/myserver-AMMimeUtils.Tpo" "$(DEPDIR)/myserver-AMMimeUtils.Po"; else rm -f "$(DEPDIR)/myserver-AMMimeUtils.Tpo"; exit 1; fi
#	source='AMMimeUtils.cpp' object='myserver-AMMimeUtils.o' libtool=no \
#	depfile='$(DEPDIR)/myserver-AMMimeUtils.Po' tmpdepfile='$(DEPDIR)/myserver-AMMimeUtils.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-AMMimeUtils.o `test -f 'AMMimeUtils.cpp' || echo '$(srcdir)/'`AMMimeUtils.cpp

myserver-AMMimeUtils.obj: AMMimeUtils.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-AMMimeUtils.obj -MD -MP -MF "$(DEPDIR)/myserver-AMMimeUtils.Tpo" -c -o myserver-AMMimeUtils.obj `if test -f 'AMMimeUtils.cpp'; then $(CYGPATH_W) 'AMMimeUtils.cpp'; else $(CYGPATH_W) '$(srcdir)/AMMimeUtils.cpp'; fi`; \
	then mv -f "$(DEPDIR)/myserver-AMMimeUtils.Tpo" "$(DEPDIR)/myserver-AMMimeUtils.Po"; else rm -f "$(DEPDIR)/myserver-AMMimeUtils.Tpo"; exit 1; fi
#	source='AMMimeUtils.cpp' object='myserver-AMMimeUtils.obj' libtool=no \
#	depfile='$(DEPDIR)/myserver-AMMimeUtils.Po' tmpdepfile='$(DEPDIR)/myserver-AMMimeUtils.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-AMMimeUtils.obj `if test -f 'AMMimeUtils.cpp'; then $(CYGPATH_W) 'AMMimeUtils.cpp'; else $(CYGPATH_W) '$(srcdir)/AMMimeUtils.cpp'; fi`

myserver-http_headers.o: http_headers.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-http_headers.o -MD -MP -MF "$(DEPDIR)/myserver-http_headers.Tpo" -c -o myserver-http_headers.o `test -f 'http_headers.cpp' || echo '$(srcdir)/'`http_headers.cpp; \
	then mv -f "$(DEPDIR)/myserver-http_headers.Tpo" "$(DEPDIR)/myserver-http_headers.Po"; else rm -f "$(DEPDIR)/myserver-http_headers.Tpo"; exit 1; fi
#	source='http_headers.cpp' object='myserver-http_headers.o' libtool=no \
#	depfile='$(DEPDIR)/myserver-http_headers.Po' tmpdepfile='$(DEPDIR)/myserver-http_headers.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-http_headers.o `test -f 'http_headers.cpp' || echo '$(srcdir)/'`http_headers.cpp

myserver-http_headers.obj: http_headers.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-http_headers.obj -MD -MP -MF "$(DEPDIR)/myserver-http_headers.Tpo" -c -o myserver-http_headers.obj `if test -f 'http_headers.cpp'; then $(CYGPATH_W) 'http_headers.cpp'; else $(CYGPATH_W) '$(srcdir)/http_headers.cpp'; fi`; \
	then mv -f "$(DEPDIR)/myserver-http_headers.Tpo" "$(DEPDIR)/myserver-http_headers.Po"; else rm -f "$(DEPDIR)/myserver-http_headers.Tpo"; exit 1; fi
#	source='http_headers.cpp' object='myserver-http_headers.obj' libtool=no \
#	depfile='$(DEPDIR)/myserver-http_headers.Po' tmpdepfile='$(DEPDIR)/myserver-http_headers.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-http_headers.obj `if test -f 'http_headers.cpp'; then $(CYGPATH_W) 'http_headers.cpp'; else $(CYGPATH_W) '$(srcdir)/http_headers.cpp'; fi`

myserver-gzip.o: gzip.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-gzip.o -MD -MP -MF "$(DEPDIR)/myserver-gzip.Tpo" -c -o myserver-gzip.o `test -f 'gzip.cpp' || echo '$(srcdir)/'`gzip.cpp; \
	then mv -f "$(DEPDIR)/myserver-gzip.Tpo" "$(DEPDIR)/myserver-gzip.Po"; else rm -f "$(DEPDIR)/myserver-gzip.Tpo"; exit 1; fi
#	source='gzip.cpp' object='myserver-gzip.o' libtool=no \
#	depfile='$(DEPDIR)/myserver-gzip.Po' tmpdepfile='$(DEPDIR)/myserver-gzip.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-gzip.o `test -f 'gzip.cpp' || echo '$(srcdir)/'`gzip.cpp

myserver-gzip.obj: gzip.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-gzip.obj -MD -MP -MF "$(DEPDIR)/myserver-gzip.Tpo" -c -o myserver-gzip.obj `if test -f 'gzip.cpp'; then $(CYGPATH_W) 'gzip.cpp'; else $(CYGPATH_W) '$(srcdir)/gzip.cpp'; fi`; \
	then mv -f "$(DEPDIR)/myserver-gzip.Tpo" "$(DEPDIR)/myserver-gzip.Po"; else rm -f "$(DEPDIR)/myserver-gzip.Tpo"; exit 1; fi
#	source='gzip.cpp' object='myserver-gzip.obj' libtool=no \
#	depfile='$(DEPDIR)/myserver-gzip.Po' tmpdepfile='$(DEPDIR)/myserver-gzip.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-gzip.obj `if test -f 'gzip.cpp'; then $(CYGPATH_W) 'gzip.cpp'; else $(CYGPATH_W) '$(srcdir)/gzip.cpp'; fi`

myserver-MIME_manager.o: MIME_manager.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-MIME_manager.o -MD -MP -MF "$(DEPDIR)/myserver-MIME_manager.Tpo" -c -o myserver-MIME_manager.o `test -f 'MIME_manager.cpp' || echo '$(srcdir)/'`MIME_manager.cpp; \
	then mv -f "$(DEPDIR)/myserver-MIME_manager.Tpo" "$(DEPDIR)/myserver-MIME_manager.Po"; else rm -f "$(DEPDIR)/myserver-MIME_manager.Tpo"; exit 1; fi
#	source='MIME_manager.cpp' object='myserver-MIME_manager.o' libtool=no \
#	depfile='$(DEPDIR)/myserver-MIME_manager.Po' tmpdepfile='$(DEPDIR)/myserver-MIME_manager.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-MIME_manager.o `test -f 'MIME_manager.cpp' || echo '$(srcdir)/'`MIME_manager.cpp

myserver-MIME_manager.obj: MIME_manager.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-MIME_manager.obj -MD -MP -MF "$(DEPDIR)/myserver-MIME_manager.Tpo" -c -o myserver-MIME_manager.obj `if test -f 'MIME_manager.cpp'; then $(CYGPATH_W) 'MIME_manager.cpp'; else $(CYGPATH_W) '$(srcdir)/MIME_manager.cpp'; fi`; \
	then mv -f "$(DEPDIR)/myserver-MIME_manager.Tpo" "$(DEPDIR)/myserver-MIME_manager.Po"; else rm -f "$(DEPDIR)/myserver-MIME_manager.Tpo"; exit 1; fi
#	source='MIME_manager.cpp' object='myserver-MIME_manager.obj' libtool=no \
#	depfile='$(DEPDIR)/myserver-MIME_manager.Po' tmpdepfile='$(DEPDIR)/myserver-MIME_manager.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-MIME_manager.obj `if test -f 'MIME_manager.cpp'; then $(CYGPATH_W) 'MIME_manager.cpp'; else $(CYGPATH_W) '$(srcdir)/MIME_manager.cpp'; fi`

myserver-winCGI.o: winCGI.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-winCGI.o -MD -MP -MF "$(DEPDIR)/myserver-winCGI.Tpo" -c -o myserver-winCGI.o `test -f 'winCGI.cpp' || echo '$(srcdir)/'`winCGI.cpp; \
	then mv -f "$(DEPDIR)/myserver-winCGI.Tpo" "$(DEPDIR)/myserver-winCGI.Po"; else rm -f "$(DEPDIR)/myserver-winCGI.Tpo"; exit 1; fi
#	source='winCGI.cpp' object='myserver-winCGI.o' libtool=no \
#	depfile='$(DEPDIR)/myserver-winCGI.Po' tmpdepfile='$(DEPDIR)/myserver-winCGI.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-winCGI.o `test -f 'winCGI.cpp' || echo '$(srcdir)/'`winCGI.cpp

myserver-winCGI.obj: winCGI.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-winCGI.obj -MD -MP -MF "$(DEPDIR)/myserver-winCGI.Tpo" -c -o myserver-winCGI.obj `if test -f 'winCGI.cpp'; then $(CYGPATH_W) 'winCGI.cpp'; else $(CYGPATH_W) '$(srcdir)/winCGI.cpp'; fi`; \
	then mv -f "$(DEPDIR)/myserver-winCGI.Tpo" "$(DEPDIR)/myserver-winCGI.Po"; else rm -f "$(DEPDIR)/myserver-winCGI.Tpo"; exit 1; fi
#	source='winCGI.cpp' object='myserver-winCGI.obj' libtool=no \
#	depfile='$(DEPDIR)/myserver-winCGI.Po' tmpdepfile='$(DEPDIR)/myserver-winCGI.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-winCGI.obj `if test -f 'winCGI.cpp'; then $(CYGPATH_W) 'winCGI.cpp'; else $(CYGPATH_W) '$(srcdir)/winCGI.cpp'; fi`

myserver-cXMLParser.o: cXMLParser.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-cXMLParser.o -MD -MP -MF "$(DEPDIR)/myserver-cXMLParser.Tpo" -c -o myserver-cXMLParser.o `test -f 'cXMLParser.cpp' || echo '$(srcdir)/'`cXMLParser.cpp; \
	then mv -f "$(DEPDIR)/myserver-cXMLParser.Tpo" "$(DEPDIR)/myserver-cXMLParser.Po"; else rm -f "$(DEPDIR)/myserver-cXMLParser.Tpo"; exit 1; fi
#	source='cXMLParser.cpp' object='myserver-cXMLParser.o' libtool=no \
#	depfile='$(DEPDIR)/myserver-cXMLParser.Po' tmpdepfile='$(DEPDIR)/myserver-cXMLParser.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-cXMLParser.o `test -f 'cXMLParser.cpp' || echo '$(srcdir)/'`cXMLParser.cpp

myserver-cXMLParser.obj: cXMLParser.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-cXMLParser.obj -MD -MP -MF "$(DEPDIR)/myserver-cXMLParser.Tpo" -c -o myserver-cXMLParser.obj `if test -f 'cXMLParser.cpp'; then $(CYGPATH_W) 'cXMLParser.cpp'; else $(CYGPATH_W) '$(srcdir)/cXMLParser.cpp'; fi`; \
	then mv -f "$(DEPDIR)/myserver-cXMLParser.Tpo" "$(DEPDIR)/myserver-cXMLParser.Po"; else rm -f "$(DEPDIR)/myserver-cXMLParser.Tpo"; exit 1; fi
#	source='cXMLParser.cpp' object='myserver-cXMLParser.obj' libtool=no \
#	depfile='$(DEPDIR)/myserver-cXMLParser.Po' tmpdepfile='$(DEPDIR)/myserver-cXMLParser.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-cXMLParser.obj `if test -f 'cXMLParser.cpp'; then $(CYGPATH_W) 'cXMLParser.cpp'; else $(CYGPATH_W) '$(srcdir)/cXMLParser.cpp'; fi`

myserver-cgi.o: cgi.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-cgi.o -MD -MP -MF "$(DEPDIR)/myserver-cgi.Tpo" -c -o myserver-cgi.o `test -f 'cgi.cpp' || echo '$(srcdir)/'`cgi.cpp; \
	then mv -f "$(DEPDIR)/myserver-cgi.Tpo" "$(DEPDIR)/myserver-cgi.Po"; else rm -f "$(DEPDIR)/myserver-cgi.Tpo"; exit 1; fi
#	source='cgi.cpp' object='myserver-cgi.o' libtool=no \
#	depfile='$(DEPDIR)/myserver-cgi.Po' tmpdepfile='$(DEPDIR)/myserver-cgi.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-cgi.o `test -f 'cgi.cpp' || echo '$(srcdir)/'`cgi.cpp

myserver-cgi.obj: cgi.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-cgi.obj -MD -MP -MF "$(DEPDIR)/myserver-cgi.Tpo" -c -o myserver-cgi.obj `if test -f 'cgi.cpp'; then $(CYGPATH_W) 'cgi.cpp'; else $(CYGPATH_W) '$(srcdir)/cgi.cpp'; fi`; \
	then mv -f "$(DEPDIR)/myserver-cgi.Tpo" "$(DEPDIR)/myserver-cgi.Po"; else rm -f "$(DEPDIR)/myserver-cgi.Tpo"; exit 1; fi
#	source='cgi.cpp' object='myserver-cgi.obj' libtool=no \
#	depfile='$(DEPDIR)/myserver-cgi.Po' tmpdepfile='$(DEPDIR)/myserver-cgi.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-cgi.obj `if test -f 'cgi.cpp'; then $(CYGPATH_W) 'cgi.cpp'; else $(CYGPATH_W) '$(srcdir)/cgi.cpp'; fi`

myserver-clientsThread.o: clientsThread.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-clientsThread.o -MD -MP -MF "$(DEPDIR)/myserver-clientsThread.Tpo" -c -o myserver-clientsThread.o `test -f 'clientsThread.cpp' || echo '$(srcdir)/'`clientsThread.cpp; \
	then mv -f "$(DEPDIR)/myserver-clientsThread.Tpo" "$(DEPDIR)/myserver-clientsThread.Po"; else rm -f "$(DEPDIR)/myserver-clientsThread.Tpo"; exit 1; fi
#	source='clientsThread.cpp' object='myserver-clientsThread.o' libtool=no \
#	depfile='$(DEPDIR)/myserver-clientsThread.Po' tmpdepfile='$(DEPDIR)/myserver-clientsThread.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-clientsThread.o `test -f 'clientsThread.cpp' || echo '$(srcdir)/'`clientsThread.cpp

myserver-clientsThread.obj: clientsThread.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-clientsThread.obj -MD -MP -MF "$(DEPDIR)/myserver-clientsThread.Tpo" -c -o myserver-clientsThread.obj `if test -f 'clientsThread.cpp'; then $(CYGPATH_W) 'clientsThread.cpp'; else $(CYGPATH_W) '$(srcdir)/clientsThread.cpp'; fi`; \
	then mv -f "$(DEPDIR)/myserver-clientsThread.Tpo" "$(DEPDIR)/myserver-clientsThread.Po"; else rm -f "$(DEPDIR)/myserver-clientsThread.Tpo"; exit 1; fi
#	source='clientsThread.cpp' object='myserver-clientsThread.obj' libtool=no \
#	depfile='$(DEPDIR)/myserver-clientsThread.Po' tmpdepfile='$(DEPDIR)/myserver-clientsThread.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-clientsThread.obj `if test -f 'clientsThread.cpp'; then $(CYGPATH_W) 'clientsThread.cpp'; else $(CYGPATH_W) '$(srcdir)/clientsThread.cpp'; fi`

myserver-cserver.o: cserver.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-cserver.o -MD -MP -MF "$(DEPDIR)/myserver-cserver.Tpo" -c -o myserver-cserver.o `test -f 'cserver.cpp' || echo '$(srcdir)/'`cserver.cpp; \
	then mv -f "$(DEPDIR)/myserver-cserver.Tpo" "$(DEPDIR)/myserver-cserver.Po"; else rm -f "$(DEPDIR)/myserver-cserver.Tpo"; exit 1; fi
#	source='cserver.cpp' object='myserver-cserver.o' libtool=no \
#	depfile='$(DEPDIR)/myserver-cserver.Po' tmpdepfile='$(DEPDIR)/myserver-cserver.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-cserver.o `test -f 'cserver.cpp' || echo '$(srcdir)/'`cserver.cpp

myserver-cserver.obj: cserver.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-cserver.obj -MD -MP -MF "$(DEPDIR)/myserver-cserver.Tpo" -c -o myserver-cserver.obj `if test -f 'cserver.cpp'; then $(CYGPATH_W) 'cserver.cpp'; else $(CYGPATH_W) '$(srcdir)/cserver.cpp'; fi`; \
	then mv -f "$(DEPDIR)/myserver-cserver.Tpo" "$(DEPDIR)/myserver-cserver.Po"; else rm -f "$(DEPDIR)/myserver-cserver.Tpo"; exit 1; fi
#	source='cserver.cpp' object='myserver-cserver.obj' libtool=no \
#	depfile='$(DEPDIR)/myserver-cserver.Po' tmpdepfile='$(DEPDIR)/myserver-cserver.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-cserver.obj `if test -f 'cserver.cpp'; then $(CYGPATH_W) 'cserver.cpp'; else $(CYGPATH_W) '$(srcdir)/cserver.cpp'; fi`

myserver-filemanager.o: filemanager.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-filemanager.o -MD -MP -MF "$(DEPDIR)/myserver-filemanager.Tpo" -c -o myserver-filemanager.o `test -f 'filemanager.cpp' || echo '$(srcdir)/'`filemanager.cpp; \
	then mv -f "$(DEPDIR)/myserver-filemanager.Tpo" "$(DEPDIR)/myserver-filemanager.Po"; else rm -f "$(DEPDIR)/myserver-filemanager.Tpo"; exit 1; fi
#	source='filemanager.cpp' object='myserver-filemanager.o' libtool=no \
#	depfile='$(DEPDIR)/myserver-filemanager.Po' tmpdepfile='$(DEPDIR)/myserver-filemanager.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-filemanager.o `test -f 'filemanager.cpp' || echo '$(srcdir)/'`filemanager.cpp

myserver-filemanager.obj: filemanager.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-filemanager.obj -MD -MP -MF "$(DEPDIR)/myserver-filemanager.Tpo" -c -o myserver-filemanager.obj `if test -f 'filemanager.cpp'; then $(CYGPATH_W) 'filemanager.cpp'; else $(CYGPATH_W) '$(srcdir)/filemanager.cpp'; fi`; \
	then mv -f "$(DEPDIR)/myserver-filemanager.Tpo" "$(DEPDIR)/myserver-filemanager.Po"; else rm -f "$(DEPDIR)/myserver-filemanager.Tpo"; exit 1; fi
#	source='filemanager.cpp' object='myserver-filemanager.obj' libtool=no \
#	depfile='$(DEPDIR)/myserver-filemanager.Po' tmpdepfile='$(DEPDIR)/myserver-filemanager.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-filemanager.obj `if test -f 'filemanager.cpp'; then $(CYGPATH_W) 'filemanager.cpp'; else $(CYGPATH_W) '$(srcdir)/filemanager.cpp'; fi`

myserver-http.o: http.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-http.o -MD -MP -MF "$(DEPDIR)/myserver-http.Tpo" -c -o myserver-http.o `test -f 'http.cpp' || echo '$(srcdir)/'`http.cpp; \
	then mv -f "$(DEPDIR)/myserver-http.Tpo" "$(DEPDIR)/myserver-http.Po"; else rm -f "$(DEPDIR)/myserver-http.Tpo"; exit 1; fi
#	source='http.cpp' object='myserver-http.o' libtool=no \
#	depfile='$(DEPDIR)/myserver-http.Po' tmpdepfile='$(DEPDIR)/myserver-http.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-http.o `test -f 'http.cpp' || echo '$(srcdir)/'`http.cpp

myserver-http.obj: http.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-http.obj -MD -MP -MF "$(DEPDIR)/myserver-http.Tpo" -c -o myserver-http.obj `if test -f 'http.cpp'; then $(CYGPATH_W) 'http.cpp'; else $(CYGPATH_W) '$(srcdir)/http.cpp'; fi`; \
	then mv -f "$(DEPDIR)/myserver-http.Tpo" "$(DEPDIR)/myserver-http.Po"; else rm -f "$(DEPDIR)/myserver-http.Tpo"; exit 1; fi
#	source='http.cpp' object='myserver-http.obj' libtool=no \
#	depfile='$(DEPDIR)/myserver-http.Po' tmpdepfile='$(DEPDIR)/myserver-http.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-http.obj `if test -f 'http.cpp'; then $(CYGPATH_W) 'http.cpp'; else $(CYGPATH_W) '$(srcdir)/http.cpp'; fi`

myserver-httpmsg.o: httpmsg.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-httpmsg.o -MD -MP -MF "$(DEPDIR)/myserver-httpmsg.Tpo" -c -o myserver-httpmsg.o `test -f 'httpmsg.cpp' || echo '$(srcdir)/'`httpmsg.cpp; \
	then mv -f "$(DEPDIR)/myserver-httpmsg.Tpo" "$(DEPDIR)/myserver-httpmsg.Po"; else rm -f "$(DEPDIR)/myserver-httpmsg.Tpo"; exit 1; fi
#	source='httpmsg.cpp' object='myserver-httpmsg.o' libtool=no \
#	depfile='$(DEPDIR)/myserver-httpmsg.Po' tmpdepfile='$(DEPDIR)/myserver-httpmsg.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-httpmsg.o `test -f 'httpmsg.cpp' || echo '$(srcdir)/'`httpmsg.cpp

myserver-httpmsg.obj: httpmsg.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-httpmsg.obj -MD -MP -MF "$(DEPDIR)/myserver-httpmsg.Tpo" -c -o myserver-httpmsg.obj `if test -f 'httpmsg.cpp'; then $(CYGPATH_W) 'httpmsg.cpp'; else $(CYGPATH_W) '$(srcdir)/httpmsg.cpp'; fi`; \
	then mv -f "$(DEPDIR)/myserver-httpmsg.Tpo" "$(DEPDIR)/myserver-httpmsg.Po"; else rm -f "$(DEPDIR)/myserver-httpmsg.Tpo"; exit 1; fi
#	source='httpmsg.cpp' object='myserver-httpmsg.obj' libtool=no \
#	depfile='$(DEPDIR)/myserver-httpmsg.Po' tmpdepfile='$(DEPDIR)/myserver-httpmsg.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-httpmsg.obj `if test -f 'httpmsg.cpp'; then $(CYGPATH_W) 'httpmsg.cpp'; else $(CYGPATH_W) '$(srcdir)/httpmsg.cpp'; fi`

myserver-isapi.o: isapi.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-isapi.o -MD -MP -MF "$(DEPDIR)/myserver-isapi.Tpo" -c -o myserver-isapi.o `test -f 'isapi.cpp' || echo '$(srcdir)/'`isapi.cpp; \
	then mv -f "$(DEPDIR)/myserver-isapi.Tpo" "$(DEPDIR)/myserver-isapi.Po"; else rm -f "$(DEPDIR)/myserver-isapi.Tpo"; exit 1; fi
#	source='isapi.cpp' object='myserver-isapi.o' libtool=no \
#	depfile='$(DEPDIR)/myserver-isapi.Po' tmpdepfile='$(DEPDIR)/myserver-isapi.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-isapi.o `test -f 'isapi.cpp' || echo '$(srcdir)/'`isapi.cpp

myserver-isapi.obj: isapi.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-isapi.obj -MD -MP -MF "$(DEPDIR)/myserver-isapi.Tpo" -c -o myserver-isapi.obj `if test -f 'isapi.cpp'; then $(CYGPATH_W) 'isapi.cpp'; else $(CYGPATH_W) '$(srcdir)/isapi.cpp'; fi`; \
	then mv -f "$(DEPDIR)/myserver-isapi.Tpo" "$(DEPDIR)/myserver-isapi.Po"; else rm -f "$(DEPDIR)/myserver-isapi.Tpo"; exit 1; fi
#	source='isapi.cpp' object='myserver-isapi.obj' libtool=no \
#	depfile='$(DEPDIR)/myserver-isapi.Po' tmpdepfile='$(DEPDIR)/myserver-isapi.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-isapi.obj `if test -f 'isapi.cpp'; then $(CYGPATH_W) 'isapi.cpp'; else $(CYGPATH_W) '$(srcdir)/isapi.cpp'; fi`

myserver-lfind.o: lfind.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-lfind.o -MD -MP -MF "$(DEPDIR)/myserver-lfind.Tpo" -c -o myserver-lfind.o `test -f 'lfind.cpp' || echo '$(srcdir)/'`lfind.cpp; \
	then mv -f "$(DEPDIR)/myserver-lfind.Tpo" "$(DEPDIR)/myserver-lfind.Po"; else rm -f "$(DEPDIR)/myserver-lfind.Tpo"; exit 1; fi
#	source='lfind.cpp' object='myserver-lfind.o' libtool=no \
#	depfile='$(DEPDIR)/myserver-lfind.Po' tmpdepfile='$(DEPDIR)/myserver-lfind.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-lfind.o `test -f 'lfind.cpp' || echo '$(srcdir)/'`lfind.cpp

myserver-lfind.obj: lfind.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-lfind.obj -MD -MP -MF "$(DEPDIR)/myserver-lfind.Tpo" -c -o myserver-lfind.obj `if test -f 'lfind.cpp'; then $(CYGPATH_W) 'lfind.cpp'; else $(CYGPATH_W) '$(srcdir)/lfind.cpp'; fi`; \
	then mv -f "$(DEPDIR)/myserver-lfind.Tpo" "$(DEPDIR)/myserver-lfind.Po"; else rm -f "$(DEPDIR)/myserver-lfind.Tpo"; exit 1; fi
#	source='lfind.cpp' object='myserver-lfind.obj' libtool=no \
#	depfile='$(DEPDIR)/myserver-lfind.Po' tmpdepfile='$(DEPDIR)/myserver-lfind.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-lfind.obj `if test -f 'lfind.cpp'; then $(CYGPATH_W) 'lfind.cpp'; else $(CYGPATH_W) '$(srcdir)/lfind.cpp'; fi`

myserver-mscgi.o: mscgi.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-mscgi.o -MD -MP -MF "$(DEPDIR)/myserver-mscgi.Tpo" -c -o myserver-mscgi.o `test -f 'mscgi.cpp' || echo '$(srcdir)/'`mscgi.cpp; \
	then mv -f "$(DEPDIR)/myserver-mscgi.Tpo" "$(DEPDIR)/myserver-mscgi.Po"; else rm -f "$(DEPDIR)/myserver-mscgi.Tpo"; exit 1; fi
#	source='mscgi.cpp' object='myserver-mscgi.o' libtool=no \
#	depfile='$(DEPDIR)/myserver-mscgi.Po' tmpdepfile='$(DEPDIR)/myserver-mscgi.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-mscgi.o `test -f 'mscgi.cpp' || echo '$(srcdir)/'`mscgi.cpp

myserver-mscgi.obj: mscgi.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-mscgi.obj -MD -MP -MF "$(DEPDIR)/myserver-mscgi.Tpo" -c -o myserver-mscgi.obj `if test -f 'mscgi.cpp'; then $(CYGPATH_W) 'mscgi.cpp'; else $(CYGPATH_W) '$(srcdir)/mscgi.cpp'; fi`; \
	then mv -f "$(DEPDIR)/myserver-mscgi.Tpo" "$(DEPDIR)/myserver-mscgi.Po"; else rm -f "$(DEPDIR)/myserver-mscgi.Tpo"; exit 1; fi
#	source='mscgi.cpp' object='myserver-mscgi.obj' libtool=no \
#	depfile='$(DEPDIR)/myserver-mscgi.Po' tmpdepfile='$(DEPDIR)/myserver-mscgi.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-mscgi.obj `if test -f 'mscgi.cpp'; then $(CYGPATH_W) 'mscgi.cpp'; else $(CYGPATH_W) '$(srcdir)/mscgi.cpp'; fi`

myserver-myserver.o: myserver.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-myserver.o -MD -MP -MF "$(DEPDIR)/myserver-myserver.Tpo" -c -o myserver-myserver.o `test -f 'myserver.cpp' || echo '$(srcdir)/'`myserver.cpp; \
	then mv -f "$(DEPDIR)/myserver-myserver.Tpo" "$(DEPDIR)/myserver-myserver.Po"; else rm -f "$(DEPDIR)/myserver-myserver.Tpo"; exit 1; fi
#	source='myserver.cpp' object='myserver-myserver.o' libtool=no \
#	depfile='$(DEPDIR)/myserver-myserver.Po' tmpdepfile='$(DEPDIR)/myserver-myserver.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-myserver.o `test -f 'myserver.cpp' || echo '$(srcdir)/'`myserver.cpp

myserver-myserver.obj: myserver.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-myserver.obj -MD -MP -MF "$(DEPDIR)/myserver-myserver.Tpo" -c -o myserver-myserver.obj `if test -f 'myserver.cpp'; then $(CYGPATH_W) 'myserver.cpp'; else $(CYGPATH_W) '$(srcdir)/myserver.cpp'; fi`; \
	then mv -f "$(DEPDIR)/myserver-myserver.Tpo" "$(DEPDIR)/myserver-myserver.Po"; else rm -f "$(DEPDIR)/myserver-myserver.Tpo"; exit 1; fi
#	source='myserver.cpp' object='myserver-myserver.obj' libtool=no \
#	depfile='$(DEPDIR)/myserver-myserver.Po' tmpdepfile='$(DEPDIR)/myserver-myserver.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-myserver.obj `if test -f 'myserver.cpp'; then $(CYGPATH_W) 'myserver.cpp'; else $(CYGPATH_W) '$(srcdir)/myserver.cpp'; fi`

myserver-security.o: security.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-security.o -MD -MP -MF "$(DEPDIR)/myserver-security.Tpo" -c -o myserver-security.o `test -f 'security.cpp' || echo '$(srcdir)/'`security.cpp; \
	then mv -f "$(DEPDIR)/myserver-security.Tpo" "$(DEPDIR)/myserver-security.Po"; else rm -f "$(DEPDIR)/myserver-security.Tpo"; exit 1; fi
#	source='security.cpp' object='myserver-security.o' libtool=no \
#	depfile='$(DEPDIR)/myserver-security.Po' tmpdepfile='$(DEPDIR)/myserver-security.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-security.o `test -f 'security.cpp' || echo '$(srcdir)/'`security.cpp

myserver-security.obj: security.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-security.obj -MD -MP -MF "$(DEPDIR)/myserver-security.Tpo" -c -o myserver-security.obj `if test -f 'security.cpp'; then $(CYGPATH_W) 'security.cpp'; else $(CYGPATH_W) '$(srcdir)/security.cpp'; fi`; \
	then mv -f "$(DEPDIR)/myserver-security.Tpo" "$(DEPDIR)/myserver-security.Po"; else rm -f "$(DEPDIR)/myserver-security.Tpo"; exit 1; fi
#	source='security.cpp' object='myserver-security.obj' libtool=no \
#	depfile='$(DEPDIR)/myserver-security.Po' tmpdepfile='$(DEPDIR)/myserver-security.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-security.obj `if test -f 'security.cpp'; then $(CYGPATH_W) 'security.cpp'; else $(CYGPATH_W) '$(srcdir)/security.cpp'; fi`

myserver-sockets.o: sockets.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-sockets.o -MD -MP -MF "$(DEPDIR)/myserver-sockets.Tpo" -c -o myserver-sockets.o `test -f 'sockets.cpp' || echo '$(srcdir)/'`sockets.cpp; \
	then mv -f "$(DEPDIR)/myserver-sockets.Tpo" "$(DEPDIR)/myserver-sockets.Po"; else rm -f "$(DEPDIR)/myserver-sockets.Tpo"; exit 1; fi
#	source='sockets.cpp' object='myserver-sockets.o' libtool=no \
#	depfile='$(DEPDIR)/myserver-sockets.Po' tmpdepfile='$(DEPDIR)/myserver-sockets.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-sockets.o `test -f 'sockets.cpp' || echo '$(srcdir)/'`sockets.cpp

myserver-sockets.obj: sockets.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-sockets.obj -MD -MP -MF "$(DEPDIR)/myserver-sockets.Tpo" -c -o myserver-sockets.obj `if test -f 'sockets.cpp'; then $(CYGPATH_W) 'sockets.cpp'; else $(CYGPATH_W) '$(srcdir)/sockets.cpp'; fi`; \
	then mv -f "$(DEPDIR)/myserver-sockets.Tpo" "$(DEPDIR)/myserver-sockets.Po"; else rm -f "$(DEPDIR)/myserver-sockets.Tpo"; exit 1; fi
#	source='sockets.cpp' object='myserver-sockets.obj' libtool=no \
#	depfile='$(DEPDIR)/myserver-sockets.Po' tmpdepfile='$(DEPDIR)/myserver-sockets.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-sockets.obj `if test -f 'sockets.cpp'; then $(CYGPATH_W) 'sockets.cpp'; else $(CYGPATH_W) '$(srcdir)/sockets.cpp'; fi`

myserver-stringutils.o: stringutils.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-stringutils.o -MD -MP -MF "$(DEPDIR)/myserver-stringutils.Tpo" -c -o myserver-stringutils.o `test -f 'stringutils.cpp' || echo '$(srcdir)/'`stringutils.cpp; \
	then mv -f "$(DEPDIR)/myserver-stringutils.Tpo" "$(DEPDIR)/myserver-stringutils.Po"; else rm -f "$(DEPDIR)/myserver-stringutils.Tpo"; exit 1; fi
#	source='stringutils.cpp' object='myserver-stringutils.o' libtool=no \
#	depfile='$(DEPDIR)/myserver-stringutils.Po' tmpdepfile='$(DEPDIR)/myserver-stringutils.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-stringutils.o `test -f 'stringutils.cpp' || echo '$(srcdir)/'`stringutils.cpp

myserver-stringutils.obj: stringutils.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-stringutils.obj -MD -MP -MF "$(DEPDIR)/myserver-stringutils.Tpo" -c -o myserver-stringutils.obj `if test -f 'stringutils.cpp'; then $(CYGPATH_W) 'stringutils.cpp'; else $(CYGPATH_W) '$(srcdir)/stringutils.cpp'; fi`; \
	then mv -f "$(DEPDIR)/myserver-stringutils.Tpo" "$(DEPDIR)/myserver-stringutils.Po"; else rm -f "$(DEPDIR)/myserver-stringutils.Tpo"; exit 1; fi
#	source='stringutils.cpp' object='myserver-stringutils.obj' libtool=no \
#	depfile='$(DEPDIR)/myserver-stringutils.Po' tmpdepfile='$(DEPDIR)/myserver-stringutils.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-stringutils.obj `if test -f 'stringutils.cpp'; then $(CYGPATH_W) 'stringutils.cpp'; else $(CYGPATH_W) '$(srcdir)/stringutils.cpp'; fi`

myserver-utility.o: utility.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-utility.o -MD -MP -MF "$(DEPDIR)/myserver-utility.Tpo" -c -o myserver-utility.o `test -f 'utility.cpp' || echo '$(srcdir)/'`utility.cpp; \
	then mv -f "$(DEPDIR)/myserver-utility.Tpo" "$(DEPDIR)/myserver-utility.Po"; else rm -f "$(DEPDIR)/myserver-utility.Tpo"; exit 1; fi
#	source='utility.cpp' object='myserver-utility.o' libtool=no \
#	depfile='$(DEPDIR)/myserver-utility.Po' tmpdepfile='$(DEPDIR)/myserver-utility.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-utility.o `test -f 'utility.cpp' || echo '$(srcdir)/'`utility.cpp

myserver-utility.obj: utility.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-utility.obj -MD -MP -MF "$(DEPDIR)/myserver-utility.Tpo" -c -o myserver-utility.obj `if test -f 'utility.cpp'; then $(CYGPATH_W) 'utility.cpp'; else $(CYGPATH_W) '$(srcdir)/utility.cpp'; fi`; \
	then mv -f "$(DEPDIR)/myserver-utility.Tpo" "$(DEPDIR)/myserver-utility.Po"; else rm -f "$(DEPDIR)/myserver-utility.Tpo"; exit 1; fi
#	source='utility.cpp' object='myserver-utility.obj' libtool=no \
#	depfile='$(DEPDIR)/myserver-utility.Po' tmpdepfile='$(DEPDIR)/myserver-utility.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-utility.obj `if test -f 'utility.cpp'; then $(CYGPATH_W) 'utility.cpp'; else $(CYGPATH_W) '$(srcdir)/utility.cpp'; fi`

myserver-vhosts.o: vhosts.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-vhosts.o -MD -MP -MF "$(DEPDIR)/myserver-vhosts.Tpo" -c -o myserver-vhosts.o `test -f 'vhosts.cpp' || echo '$(srcdir)/'`vhosts.cpp; \
	then mv -f "$(DEPDIR)/myserver-vhosts.Tpo" "$(DEPDIR)/myserver-vhosts.Po"; else rm -f "$(DEPDIR)/myserver-vhosts.Tpo"; exit 1; fi
#	source='vhosts.cpp' object='myserver-vhosts.o' libtool=no \
#	depfile='$(DEPDIR)/myserver-vhosts.Po' tmpdepfile='$(DEPDIR)/myserver-vhosts.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-vhosts.o `test -f 'vhosts.cpp' || echo '$(srcdir)/'`vhosts.cpp

myserver-vhosts.obj: vhosts.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-vhosts.obj -MD -MP -MF "$(DEPDIR)/myserver-vhosts.Tpo" -c -o myserver-vhosts.obj `if test -f 'vhosts.cpp'; then $(CYGPATH_W) 'vhosts.cpp'; else $(CYGPATH_W) '$(srcdir)/vhosts.cpp'; fi`; \
	then mv -f "$(DEPDIR)/myserver-vhosts.Tpo" "$(DEPDIR)/myserver-vhosts.Po"; else rm -f "$(DEPDIR)/myserver-vhosts.Tpo"; exit 1; fi
#	source='vhosts.cpp' object='myserver-vhosts.obj' libtool=no \
#	depfile='$(DEPDIR)/myserver-vhosts.Po' tmpdepfile='$(DEPDIR)/myserver-vhosts.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-vhosts.obj `if test -f 'vhosts.cpp'; then $(CYGPATH_W) 'vhosts.cpp'; else $(CYGPATH_W) '$(srcdir)/vhosts.cpp'; fi`

myserver-fastCGI.o: fastCGI.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-fastCGI.o -MD -MP -MF "$(DEPDIR)/myserver-fastCGI.Tpo" -c -o myserver-fastCGI.o `test -f 'fastCGI.cpp' || echo '$(srcdir)/'`fastCGI.cpp; \
	then mv -f "$(DEPDIR)/myserver-fastCGI.Tpo" "$(DEPDIR)/myserver-fastCGI.Po"; else rm -f "$(DEPDIR)/myserver-fastCGI.Tpo"; exit 1; fi
#	source='fastCGI.cpp' object='myserver-fastCGI.o' libtool=no \
#	depfile='$(DEPDIR)/myserver-fastCGI.Po' tmpdepfile='$(DEPDIR)/myserver-fastCGI.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-fastCGI.o `test -f 'fastCGI.cpp' || echo '$(srcdir)/'`fastCGI.cpp

myserver-fastCGI.obj: fastCGI.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-fastCGI.obj -MD -MP -MF "$(DEPDIR)/myserver-fastCGI.Tpo" -c -o myserver-fastCGI.obj `if test -f 'fastCGI.cpp'; then $(CYGPATH_W) 'fastCGI.cpp'; else $(CYGPATH_W) '$(srcdir)/fastCGI.cpp'; fi`; \
	then mv -f "$(DEPDIR)/myserver-fastCGI.Tpo" "$(DEPDIR)/myserver-fastCGI.Po"; else rm -f "$(DEPDIR)/myserver-fastCGI.Tpo"; exit 1; fi
#	source='fastCGI.cpp' object='myserver-fastCGI.obj' libtool=no \
#	depfile='$(DEPDIR)/myserver-fastCGI.Po' tmpdepfile='$(DEPDIR)/myserver-fastCGI.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-fastCGI.obj `if test -f 'fastCGI.cpp'; then $(CYGPATH_W) 'fastCGI.cpp'; else $(CYGPATH_W) '$(srcdir)/fastCGI.cpp'; fi`

myserver-md5.o: md5.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-md5.o -MD -MP -MF "$(DEPDIR)/myserver-md5.Tpo" -c -o myserver-md5.o `test -f 'md5.cpp' || echo '$(srcdir)/'`md5.cpp; \
	then mv -f "$(DEPDIR)/myserver-md5.Tpo" "$(DEPDIR)/myserver-md5.Po"; else rm -f "$(DEPDIR)/myserver-md5.Tpo"; exit 1; fi
#	source='md5.cpp' object='myserver-md5.o' libtool=no \
#	depfile='$(DEPDIR)/myserver-md5.Po' tmpdepfile='$(DEPDIR)/myserver-md5.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-md5.o `test -f 'md5.cpp' || echo '$(srcdir)/'`md5.cpp

myserver-md5.obj: md5.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -MT myserver-md5.obj -MD -MP -MF "$(DEPDIR)/myserver-md5.Tpo" -c -o myserver-md5.obj `if test -f 'md5.cpp'; then $(CYGPATH_W) 'md5.cpp'; else $(CYGPATH_W) '$(srcdir)/md5.cpp'; fi`; \
	then mv -f "$(DEPDIR)/myserver-md5.Tpo" "$(DEPDIR)/myserver-md5.Po"; else rm -f "$(DEPDIR)/myserver-md5.Tpo"; exit 1; fi
#	source='md5.cpp' object='myserver-md5.obj' libtool=no \
#	depfile='$(DEPDIR)/myserver-md5.Po' tmpdepfile='$(DEPDIR)/myserver-md5.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(myserver_CXXFLAGS) $(CXXFLAGS) -c -o myserver-md5.obj `if test -f 'md5.cpp'; then $(CYGPATH_W) 'md5.cpp'; else $(CYGPATH_W) '$(srcdir)/md5.cpp'; fi`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am


all : myserver
	cp myserver ../binaries

install :
	exit; ### install is disabled in myserver
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
