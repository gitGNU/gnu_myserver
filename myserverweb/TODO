Developer's TODO LIST for MyServer
===================================

NOW:
=====

- add local charset to allow MyServer handles URL like
  in Germany ß, ä, ö, ü
 --> because  this will be available sooner or later for china
     and all around the world


- Create AMD64 debs (MyServer 0.8.2)
- Create Pentium MMX debs (MyServer 0.8.2)
---> use CXXFLAGS="-O3 -march=amd64" / pentium-mmx

- Handle port overflow > 65535:
---> check routines in cserver.cpp, remove castings:
u_short <--> u_long: some functions not matching


- rename ACCESSESLOG to ACCESSLOG

- think about renaming some XML tags


- implement SYMLINKS:
---> system wide
---> webroot
---> checkowner
|
-----> don't follow bad symlinks


- Rewrite the linked list in cserver.cpp in C++
->  Search for an other linked list an rewrite it in C++


- security mechanism: SECURE ONE FILE with "security"
|
-----> add more functionality to "security"


- deny and allow ACCESS by ip, browser, etc
|
-----> provide this functionality for "security"



- woulb be nice to have a:
---> MyServer start/reboot/stop script


- check all file and use C++ castings
---> rewrite strange functions to avoid so many castings


- check http_dir.cpp for correct filesize displaying: mb, gb
---> add tb



MyServer 0.8.2
================
* Internal code.
- Gcc-4.x compiled binaries for all provided platforms.  (codingmaster)
- Rename myServerErr and others to MyServer.	(codingmaster)
- Provide a good api (MYSERVER, mySERVER, myServer, etc.) (codingmaster)
- Fix some hardcoded errors in MyServer, they should now show directly to the new error files (codingmaster)
- Use C++ static_cast<TYPE>... instead of the C like casting (TYPE).	(codingmaster)
- LibXML compability(*) (at the moment MyServer uses LibXML2).

* Documentation.
- Fix the documentation.		(codingmaster)
- Translation of the documentation to other languages.	(codingmaster)
- New documentation layout.(*)		(codingmaster)

* Configurability.
- Show http_dir: Last modified, etc (rewrite html code).	(codingmaster)
- Provide Bity, KB, MB, GB, TB for the show http_dir.
- Add XML tags in the configuration, like <directory show_type="MB">.
- Cleanely compile MyServer with g++ -Wall(./configure CXXFLAGS="-Wall" CFLAGS="-Wall").
- Possibility to set the logfile size in Byte, KB, MB, GB, TB(handle="KB" value="1024" or xml --> handle "MB" value="1").
- Provide more command line options (also compile date, add more to --version), compiled in binaries, etc....	(codingmaster)

* Port MyServer to other platforms.
- Add MyServer to OpenBSD ports.		(codingmaster)
- FreeBSD workaround / ports system.	(codingmaster)
- MacOS X packages / binaries.			(codingmaster)
- GNU Hurd workaround / improvements.	(codingmaster)
- Packages for MyServer available on SF. (deb, rpm, slackware, openbsd)	(codingmaster)

* Performance model.
- Running test with lots of server load. 
- Optimization of the performance model.

* Packages.
- Rpm and debs for Debian, Fedora Core and Mandrake.
- Packages for Slackware.		(codingmaster)
- Create new DevCPP devpaks for MyServer (provide the current development libraries needed to compile MyServer cvs under windows).	(codingmaster)
- Update all libraries needed to run MyServer (windows binary release).	(codingmaster)
- Perl installation script INSTALL.pl that copies the files to the right place.	(codingmaster)

* Plugins system.
- Use plugins for HTTP optional commands(other than what was implemented GET, POST...).
- Plugins for HTTP data handler(other than what was implemented CGI, ISAPI, FastCGI...).
- Filters on returned data. (*)

* HTTP header control.
- Allow or deny access based on HTTP header content.
- Find a way to have that mechanism in the xml security file.
- Modify the Request class to handle HTTP header data as in a map.
- Abstract mechanism to allow/deny access not only from security files.

* Control protocol improvements.
- Allow access to log files.(*)

* MSCGI.
- Add new methods to the manager class.(*)
- Port to other languages, maybe not natively compiled.(*)

* Other.
- Add access restriction by hostname / ip range / network range / browser client / etc.
- Implement pipes support in the file class.(*)
- Better handle of requests with chunked data.
- HTTP "chunked" transfer coding support where not used.
- Rewrite securestr.cpp (codingmaster)
- Change socket IO model to use IOCPs instead for NT+ systems.(*)
- Include the new options for logging.(*)

* GUI.
- Update/improve GUI of configuration tool.
- Tooltips.(*)
- Better graphics.(*)
- Create SSL files trough the GUI.(*)	(codingmaster)
- If asked to run on XP as service automatically install the service.

* Virtual hosts data
- Possibility to have virtual hosts data in external sources(other than virtualhosts.xml)
- Add a counter to the virtual host class to reference hosts usages.
- Add a callback method when reference counter is zero.


Future
======
- Setuid and Setgid for CGI processes.
- IPv6 Implementation. (codingmaster)	(in MyServer 0.8.x)
- PHP Configuration Tool. (codingmaster) (in MyServer 0.8.x)
- SSI files support.
- FTP server.
- Support for JSP and servlets.
- HTTP proxy server.
- Embedded perl.
- PHP SAPI module.
- Other ideas?

(*) Not so important to have now.


Georgy Berdyshev, <codingmaster ____AT____ gmail __dot__ com>

http://people.myserverproject.net/~codingmaster/
http://www.myserverproject.net/
http://www.sourceforge.net/projects/myserverweb/
