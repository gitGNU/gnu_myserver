dnl GNU MySever configuration script
dnl
dnl GNU MyServer
dnl
dnl Copyright (C) 2002-2009 Free Software Foundation, Inc.
dnl This program is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation; either version 3 of the License, or
dnl (at your option) any later version.
dnl
dnl This program is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl
dnl You should have received a copy of the GNU General Public License
dnl along with this program.  If not, see <http://www.gnu.org/licenses/>.

AC_INIT([GNU MyServer], m4_esyscmd([cat version]), [bug-myserver@gnu.org])
AC_PREREQ([2.50])
AM_CONFIG_HEADER(config.h)
CFLAGS="${CFLAGS=}"
CXXFLAGS="${CXXFLAGS=}"
LDFLAGS="${LDFLAGS=}"
AC_CANONICAL_HOST
AC_CANONICAL_TARGET

AM_INIT_AUTOMAKE

PACKAGE_STRING="m4_esyscmd([cat version])"
MYSERVER_VERSION="${PACKAGE_STRING}"

AC_SUBST(MYSERVER_VERSION)

AC_DEFINE_UNQUOTED([MYSERVER_VERSION], ["${MYSERVER_VERSION}"], [The software version])

AC_PROG_CC
AC_PROG_CPP
AC_AIX
AC_ISC_POSIX
AC_MINIX
AC_HEADER_STDC
AC_PROG_CXX
AC_PROG_CXXCPP
AC_PROG_RANLIB
AC_PROG_LIBTOOL
AM_PROG_LEX
AC_PROG_YACC
AC_C_BIGENDIAN

AC_CHECK_PROG(make_info, makeinfo, yes, no)
if test x$make_info = xno ; then
   AC_MSG_WARN([ Cannot find makeinfo: info file will not be created])
   MAKE_DOC=no
else
   MAKE_DOC=yes
fi

CFLAGS="$CFLAGS $_LT_AC_TAGVAR(lt_prog_compiler_pic, CXX)"
CXXFLAGS="$CXXFLAGS $_LT_AC_TAGVAR(lt_prog_compiler_pic, CXX)"
LDFLAGS="$LDFLAGS $_LT_AC_TAGVAR(lt_prog_compiler_pic, CXX)"

AC_ARG_WITH([root-prefix], [  --with-root-prefix=PREFIX override prefix variable for files to be placed in the root], root_prefix=$withval, root_prefix="\$(DESTDIR)")

AC_ARG_ENABLE([ipv6], [  --enable-ipv6 Build with IPv6 support], enable_ipv6="yes", enable_ipv6="")

root_bindir='${root_prefix}/bin'
root_sbindir='${root_prefix}/sbin'
root_sysconfdir='${root_prefix}/etc'

AC_SUBST(root_prefix)
AC_SUBST(root_bindir)
AC_SUBST(root_sbindir)
AC_SUBST(root_sysconfdir)

dnl Looking for argp.h
AC_CHECK_HEADER([argp.h], AC_DEFINE(ARGP, 1, [Define if GNU argp tools are available]))

dnl Looking for error.h
AC_CHECK_HEADER([error.h], AC_DEFINE(ERRORH, 1, [Define if the error.h file is present]))

AC_CHECK_HEADER([grp.h], AC_DEFINE(GRP, 1, [Define if grp.h is available]))

AC_CHECK_HEADER([sys/sendfile.h], AC_DEFINE(SENDFILE, 1, [Define if the sendfile syscall is present]))

AC_CHECK_FUNCS(regcomp, AC_DEFINE(REGEX, 1, [Define if the regex library is present]) )

AC_CHECK_FUNCS(gettimeofday, AC_DEFINE(GETTIMEOFDAY, 1, [Define if the gettimeofday function is present]) )

AC_CHECK_FUNCS(setgroups, AC_DEFINE(SETGROUPS, 1, [Define if the setgroups function is present]) )

AC_CHECK_FUNCS(localtime_r, AC_DEFINE(LOCALTIME_R, 1, [Define if the localtime_r function is present]) )

AC_CHECK_FUNCS(pipe, AC_DEFINE(PIPE, 1, [Define if the pipe function is present]) )

AC_CHECK_FUNCS(posix_fallocate, AC_DEFINE(POSIX_FALLOCATE, 1, [Define if the posix_fallocate function is present]) )

AC_CHECK_FUNCS(snprintf, AC_DEFINE(SNPRINTF, 1, [Define if the snprintf function is present]) )

AC_CHECK_FUNCS(getpwnam, AC_DEFINE(GETPWNAM, 1, [Define if the getpwnam function is present]) )

AC_CHECK_LIB(gcrypt, gcry_control, AC_DEFINE(GCRY_CONTROL, 1, [Define if the gcry_control function is present]))

case "${host}" in
    *-*-mingw32*)
     LDFLAGS="$LDFLAGS -lwsock32 -lgdi32 -lole32  -luuid -luserenv"
     ;;
  *)
     dnl Looking for pthreads
     GNOME_PTHREAD_CHECK
     if test x$PTHREAD_LIB = x; then
             AC_MSG_ERROR([
             *** This system appears to have no posix threads
             *** Threads are required for MyServer
             ])
    fi

    dnl Looking for dl
    AC_SEARCH_LIBS([dlopen], [dl c], have_dl=yes)

    if test x$have_dl == xyes; then
        AC_DEFINE(HAVE_DL, 1, [LibDL support, define to 1 to enable])
        MAKE_MSCGI=yes
    else
         AC_MSG_WARN([
                *** dlLIB not found
                *** MSCGI support will not function
                    ])
         DL_LIB=""
         MAKE_MSCGI=no
   fi


  ;;

esac

AC_SUBST(DL_LIB)


if test x$PTHREAD_LIB != x; then
   AC_DEFINE(HAVE_PTHREAD, 1, [POSIX threads required for MyServer in a non-windows environment])
fi

dnl See if we need -lxnet for arpa
AC_CHECK_LIB(xnet, accept, have_xnet=yes)
if test x$have_xnet = xyes; then
   XNET_LIB="-lxnet"
else
   XNET_LIB=""
fi
AC_SUBST(XNET_LIB)

AC_SEARCH_LIBS([event_add], [event event_core event_extra],  have_event=yes)
AC_CHECK_LIB([event],  [event_add],  have_event=yes)
if test x$have_event = xyes; then
   EVENT_LIB="-levent"
else
   EVENT_LIB=""

   AC_MSG_ERROR([
*** This system appears to have no libevent
*** Libevent is required by MyServer
      ])
fi
AC_SUBST(EVENT_LIB)

AC_CHECK_FUNCS(event_loopbreak, AC_DEFINE(EVENT_LOOPBREAK, 1, [Define if the event_loopbreak function is present]) )

dnl check for Unix98 socklen_t
 AC_MSG_CHECKING(if socklen_t is defined)
 AC_TRY_COMPILE(
     [#include <sys/socket.h>],
     [socklen_t len = 10; return len;],
         [AC_MSG_RESULT(yes)],
         [AC_MSG_RESULT(no)
          AC_DEFINE(socklen_t, int, need to define this where socklen_t is not present)])


# Libidn checks
# -------------
AC_CHECK_HEADER(idna.h,, 
[
   AC_MSG_WARN([idna.h not found which is part of GNU libidn.])
])

AC_ARG_WITH(idn-lib,
  [[  --with-idn-lib=FILE     Use the given path to the idn library.]],
  [
	if test "$withval" != "yes" -a "$withval" != ""; then
		 IDN_LIB=$withval
		 fi
  ])

if test "x$IDN_LIB" = "x"; then
    AC_CHECK_LIB(idn, stringprep_check_version, 	
		have_idn="yes")

		if test "x$have_idn" = "xyes"; then
				IDN_LIB="-lidn"
				AC_DEFINE(HAVE_IDN, 1, [Define if the IDN library is present])
		fi
  fi

AC_SUBST(IDN_LIB)

dnl Looking for LibXL2
AM_PATH_XML2(2.6.0, have_xml2=yes)
if test x$have_xml2 != xyes; then
    AC_MSG_ERROR([
*** Cannot find libXML2
*** libXML2 is required for MyServer
])

else
	CPPFLAGS="$CPPFLAGS $XML_CPPFLAGS"
fi

AC_CHECK_LIB(gnutls-openssl, main, have_ssl=yes)

if test x_$have_ssl == x_yes; then
   SSL_LIB="-lgnutls-openssl"
else
   AC_MSG_ERROR(Cannot find ssl libraries)
fi

dnl Looking for zlib
AC_CHECK_LIB(z, uncompress, have_libz=yes)
if test x$have_libz != xyes; then
    AC_MSG_WARN([
*** Cannot find Zlib (http://www.gzip.org/zlib/)
*** gzip file transfer will not be enabled
])
    AC_DEFINE(DO_NOT_USE_GZIP, 1, [Zlib compression, define to 1 to disable])
    ZLIB_LIB=""
else
    ZLIB_LIB="-lz"


    dnl Be sure that it is a good vr
    AC_CHECK_LIB(z, compressBound, have_libz=yes)
    if test x$have_libz != xyes; then
        AC_MSG_WARN([
*** Zlib is too old (http://www.gzip.org/zlib/)
*** compressBound checking will not be enabled
])
    else
        AC_DEFINE(GZIP_CHECK_BOUNDS, 1, [Memory checking for Zlib, not defined in older vrs])
    fi
fi

AC_SUBST(ZLIB_LIB)
AC_SUBST(SSL_LIB)

if test x$enable_ipv6 = xyes; then
    dnl Check for IPv6
    AC_MSG_CHECKING([for IPv6])
    AC_TRY_RUN([ /* AF_INET6 available check */
    #include <sys/types.h>
    #include <sys/socket.h>
    main()
    {
     if (socket(AF_INET6, SOCK_STREAM, 0) < 0)
       exit(1);
     else
       exit(0);
    }
    ],
    [ AC_MSG_RESULT(yes)
      AC_DEFINE(HAVE_IPV6, 1, [Enable IPv6 support])
    ],
    [ AC_MSG_RESULT(no)
      AC_DEFINE(HAVE_IPV6, 0, [Disable IPv6 support])
      AC_MSG_ERROR([
*** Cannot enable IPv6 support
])
    ],
    [ AC_MSG_RESULT(no)
      AC_DEFINE(HAVE_IPV6, 0, [Disable IPv6 support])
      AC_MSG_ERROR([
*** Cannot enable IPv6 support
])
    ]
    )
else
    AC_DEFINE(HAVE_IPV6, 0, [Disable IPv6 support])
fi

dnl Looking for cppunit
AM_PATH_CPPUNIT(1.12.0, have_cppunit=yes)
if test x$have_cppunit != xyes; then
    AC_MSG_WARN([
*** Cannot find CppUnit (http://cppunit.sourceforge.net/.)
*** tests driver program will not be built
])
    MAKE_TESTS=no
    CPPUNIT_LDFLAGS=""
else
    MAKE_TESTS=yes
    CPPUNIT_LDFLAGS="-lcppunit"
fi

LDFLAGS="$LDFLAGS $LIBS"

AC_SUBST(CFLAGS)
AC_SUBST(CXFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(CPPUNIT_LDFLAGS)

AC_TYPE_UID_T
AC_TYPE_GETGROUPS

AM_CONDITIONAL(BUILD_TESTS, test "$MAKE_TESTS" = "yes")

AM_CONDITIONAL(BUILD_MSCGI, test "$MAKE_MSCGI" = "yes")
AM_CONDITIONAL(BUILD_DOC, test "$MAKE_DOC" = "yes")

dnl AC_CONFIG_SUBDIRS()
AC_CONFIG_FILES([
    Makefile
    binaries/Makefile
    binaries/certificates/Makefile
    binaries/plugins/Makefile
    binaries/languages/Makefile
    binaries/languages/configure/Makefile
    binaries/web/Makefile
    binaries/web/downloads/Makefile
    binaries/web/cgi-bin/Makefile
    binaries/web/cgi-src/Makefile
    binaries/web/cgi-src/post/Makefile
    binaries/web/cgi-src/math_sum/Makefile
    binaries/logs/Makefile
    binaries/system/Makefile
    binaries/system/css/Makefile
    binaries/system/errors/Makefile
    binaries/system/icons/Makefile
    binaries/system/icons/codes/Makefile
    documentation/Makefile
    include/Makefile
    include/connection/Makefile
    include/log/Makefile
    include/log/stream/Makefile
    include/conf/Makefile
    include/conf/mime/Makefile
    include/conf/security/Makefile
    include/conf/vhost/Makefile
    include/connections_scheduler/Makefile
    include/http_handler/Makefile
    include/http_handler/wincgi/Makefile
    include/http_handler/cgi/Makefile
    include/http_handler/mscgi/Makefile
    include/http_handler/fastcgi/Makefile
    include/http_handler/http_file/Makefile
    include/http_handler/proxy/Makefile
    include/http_handler/scgi/Makefile
    include/http_handler/isapi/Makefile
    include/http_handler/http_dir/Makefile
    include/base/Makefile
    include/base/find_data/Makefile
    include/base/file/Makefile
    include/base/pipe/Makefile
    include/base/base64/Makefile
    include/base/mem_buff/Makefile
    include/base/home_dir/Makefile
    include/base/multicast/Makefile
    include/base/sync/Makefile
    include/base/safetime/Makefile
    include/base/socket/Makefile
    include/base/socket_pair/Makefile
    include/base/hash_map/Makefile
    include/base/dynamic_lib/Makefile
    include/base/process/Makefile
    include/base/md5/Makefile
    include/base/ssl/Makefile
    include/base/xml/Makefile
    include/base/files_cache/Makefile
    include/base/string/Makefile
    include/base/regex/Makefile
    include/base/thread/Makefile
    include/base/unix_socket/Makefile
    include/protocol/Makefile
    include/protocol/ftp/Makefile
    include/protocol/control/Makefile
    include/protocol/https/Makefile
    include/protocol/http/Makefile
    include/protocol/http/env/Makefile
    include/filter/Makefile
    include/filter/gzip/Makefile
    include/plugin/Makefile
    include/server/Makefile
    src/Makefile
    src/connection/Makefile
    src/log/Makefile
    src/log/stream/Makefile
    src/conf/Makefile
    src/conf/mime/Makefile
    src/conf/security/Makefile
    src/conf/vhost/Makefile
    src/connections_scheduler/Makefile
    src/http_handler/Makefile
    src/http_handler/wincgi/Makefile
    src/http_handler/cgi/Makefile
    src/http_handler/mscgi/Makefile
    src/http_handler/fastcgi/Makefile
    src/http_handler/http_file/Makefile
    src/http_handler/scgi/Makefile
    src/http_handler/proxy/Makefile
    src/http_handler/isapi/Makefile
    src/http_handler/http_dir/Makefile
    src/base/Makefile
    src/base/find_data/Makefile
    src/base/file/Makefile
    src/base/pipe/Makefile
    src/base/base64/Makefile
    src/base/mem_buff/Makefile
    src/base/home_dir/Makefile
    src/base/multicast/Makefile
    src/base/sync/Makefile
    src/base/safetime/Makefile
    src/base/socket/Makefile
    src/base/socket_pair/Makefile
    src/base/hash_map/Makefile
    src/base/dynamic_lib/Makefile
    src/base/process/Makefile
    src/base/md5/Makefile
    src/base/ssl/Makefile
    src/base/xml/Makefile
    src/base/files_cache/Makefile
    src/base/string/Makefile
    src/base/regex/Makefile
    src/base/thread/Makefile
    src/base/unix_socket/Makefile
    src/protocol/Makefile
    src/protocol/ftp/Makefile
    src/protocol/control/Makefile
    src/protocol/https/Makefile
    src/protocol/http/Makefile
    src/protocol/http/env/Makefile
    src/filter/Makefile
    src/filter/gzip/Makefile
    src/plugin/Makefile
    src/server/Makefile
    tests/Makefile
    ])
AC_OUTPUT
