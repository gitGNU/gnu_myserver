@c -*-texinfo-*-
You can modify the MIME types used by MyServer by modifying the file
@file{MIMEtypes.xml}. The following is an example of this file: 

@example
<?xml version ="1.0"?>
<MIME mime="text/html" handler="SEND" param="">
<EXTENSION value="html"/>
</MIME>

<MIME mime="text/html" handler="RUNCGI" param="/usr/bin/perl">
<FILTER value="gzip"/>
<EXTENSION value="pl"/>
</MIME>
@end example

@itemize
Each block describes a different MIME type.

@item mime
the MIME attribute specifies the MIME name.

@item extension
the MIME type will be used by any file with this extension.

@item filter
this directive registers a filter to use with MIME type.

@item handler
specifies the way the file is handled by the server.

@item param
specifies additional params for the handler.

@end itemize

@code{<FILTER>} defines a filter for the MIME type.  The data will
pass through the filter before being sent to the user.  
In the example above, the data would be sent gzipped to the user.
It is possible to specify multiple filters for the same MIME type,
they will be applied in the specified order.

The same MIME type can have several extensions, you will need to
specify a different @code{<EXTENSION>} element for each extension.

These are valid HTTP handlers:
@enumerate
@item SEND
Send the file statically as is.  This command is used for files
extensions such as .html and .jpg that don't need any external
intervention from the web server.
@item RUNCGI
Run the CGI script indicated in the path.  It is used for file
extensions such as .php and .pl that need to be processed before
sending any data to the client.
@item RUNFASTCGI
Run the Fastcgi script.  This type will need a fastcgi parser
downloaded (see the PHP page).  It is also used for file extensions
such as .php and .pl.
@item EXECUTEFASTCGI
This also runs the Fastcgi script, but unlike the RUNFASTCGI above, it
does not need a server to run the script, instead it acts as a self
server.
@item RUNSCGI
Handle a specified mime type with this SCGI server.
@item EXECUTESCGI
Handle the file as a self SCGI process.
@item RUNMSCGI
Run the MSCGI script. This library is only available for MyServer. It
is used to build fast and efficient CGIs that needs to access MyServer
internal data.
@item EXECUTE
Treat the file as an executable and send the output to the client. 
@item SENDLINK
Send the file that is contained in a link.
@item EXECUTEWINCGI
Send the file as a WinCGI
@item RUNISAPI
Run the ISAPI script.  
@item EXECUTEISAPI
Run the ISAPI script but does not need a server to run. Instead, it
acts as a self server.
@end enumerate
