<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
<title>MyServer Documentation - HTTPS - www.myserverproject.net</title>
<meta http-equiv="content-type" content="text/html;charset=UTF-8" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<link rel="stylesheet" type="text/css" href="../style/myserver.css" />
</head>
<body>

<table class="center" width="95%">

<tr>

<td class="center">
<h1 class="title">HTTPS</h1>
      <h2 class="title">Notas breves sobre encripta&ccedil;&atilde;o de dados</h2>
      <p> A encripta&ccedil;&atilde;o de dados &eacute; usada para proteger os 
        dados que s&atilde;o enviados entre o cliente e o servidor. H&aacute; 
        dois tipos de algoritmo: algoritmos de encripta&ccedil;&atilde;o de dados 
        sim&eacute;tricos e assim&eacute;tricos. A diferen&ccedil;a entre os dois 
        tipos de algoritmo &eacute; que para os algoritmos sim&eacute;tricos, 
        a mesma chave &eacute; usada para encriptar e para decriptar. Esses algoritmos 
        n&atilde;o s&atilde;o usados em servidores com grande n&uacute;mero de 
        clientes em potencial, porque os dados capturados podem ser decriptados 
        por qualquer cliente que souber a chave e porque a chave precisa ser distribu&iacute;da 
        de modo seguro (por exemplo, usando um disquete) e n&atilde;o distribuir 
        numa rede grande como a Internet. Os algoritmos assim&eacute;tricos trabalham 
        de forma diferente, os dados encriptados com uma chave podem ser decriptados 
        somente com a outra chave e vice-versa. Qualquer um conhece a chave p&uacute;blica, 
        mas s&oacute; o dono conhece a chave privada. Desse modo o dono da chave 
        n&atilde;o tem que distribuir a chave s&oacute; para os clientes conhecidos, 
        mas pode distribu&iacute;-la em uma rede de larga escala. 
        <h2 class="title">Como criar certificados SSL com o OpenSSL </h2>
        <p> Um certificado &eacute; necess&aacute;rio para certificar sua identidade 
          junto a um CA(Certification Authority - Autoridade de Certifica&ccedil;&atilde;o). 
          Voc&ecirc; pode usar um certificado sem registrar em um CA, criando 
          um certificado Root Certification. Voc&ecirc; pode encontrar tudo o 
          que precisa para criar certificados na biblioteca OpenSSL, em www.openssl.org. 
          Ap&oacute;s a instala&ccedil;&atilde;o, v&aacute; ao diret&oacute;rio 
          do programa e digite: <span class="code"> <br />
          openssl genrsa -out server.key </span> <br />
          Isso vai criar uma chave privada para codificar seus dados. <br />
          <br />
          Depois, rode esse comando: <span class="code"> <br />
          openssl req -new -x509 -days 730 -config openssl.cnf -key server.key 
          -out server.pem </span> <br />
          para criar o certificado p&uacute;blico. Desse modo, o certificado pode 
          ser usado por 730 dias e a chave p&uacute;blica ser&aacute; o arquivo 
          server.pem. 
          <h2 class="title">Use certificados no MyServer </h2>
          <p> Para configurar os certificados no MyServer voc&ecirc; tem que colocar 
            os dois arquivos: server.key, server.pem na pasta certificates no 
            caminho da instala&ccedil;&atilde;o do MyServer. Depois disso voc&ecirc; 
            tem que configurar um host virtual https no arquivo virtualhosts.xml. 
            <br />
            <br />
            <span  class="code"> &lt;VHOST&gt;<br />
            &lt;NAME&gt;Todas as conex&otilde;es&lt;/NAME&gt; <br />
            &lt;PORT&gt;443&lt;/PORT&gt; <br />
            &lt;SSL_PRIVATEKEY&gt;certificates/server.key&lt;/SSL_PRIVATEKEY&gt; 
            &lt;SSL_CERTIFICATE&gt;certificates/server.pem&lt;/SSL_CERTIFICATE&gt; 
            <br />
            &lt;PROTOCOL&gt;HTTPS&lt;/PROTOCOL&gt; <br />
            &lt;DOCROOT&gt;web&lt;/DOCROOT&gt; <br />
            &lt;SYSFOLDER&gt;system&lt;/SYSFOLDER&gt; <br />
            &lt;ACCESSLOG&gt;logs/myServer.log&lt;/ACCESSLOG&gt;<br />
            &lt;WARNINGLOG&gt;logs/myServer.err&lt;/WARNINGLOG&gt; <br />
            &lt;/VHOST&gt; </span> <br />
            <br />
            Com esse host n&oacute;s colocamos um listener de https na porta 443 
            (o padr&atilde;o para o https) e usamos o arquivo certificates/server.key 
            para a chave privada e o certificates/server.pem para a p&uacute;blica. 
    </td></tr></table>
</body>
</html>